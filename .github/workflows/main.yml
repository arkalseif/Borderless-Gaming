name: Build and Release on main

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-2019

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2

      - name: Restore NuGet packages
        run: nuget restore BorderlessGaming.sln

      - name: Build solution (skip signing & installer)
        run: msbuild BorderlessGaming.sln /p:Configuration=Release /p:RunPostBuildEvent=Never

      - name: Prepare release folder
        id: prepare_release
        run: |
          $releaseDir = "release"
          $srcDir = "BorderlessGaming\bin\Release"
          mkdir $releaseDir
          Copy-Item "$srcDir\*" $releaseDir -Recurse -Force
          echo "RELEASE_DIR=$releaseDir" | Out-File -FilePath $env:GITHUB_ENV -Append

      - name: Upload release folder as artifact
        uses: actions/upload-artifact@v4
        with:
          name: BorderlessGaming-release
          path: ${{ env.RELEASE_DIR }}

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.run_number }}
          name: "Automated Release ${{ github.run_number }}"
          files: ${{ env.RELEASE_DIR }}/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Opcional: Step para capturar logs de ejecuciÃ³n (solo si agregas logging en el EXE)
      # - name: Run executable for log (debug builds)
      #   run: |
      #     cd ${{ env.RELEASE_DIR }}
      #     .\BorderlessGaming.exe --log > BorderlessGaming.log 2>&1 || exit 0
      #   continue-on-error: true
      #   if: always()
      # - name: Upload execution log
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: BorderlessGaming-log
      #     path: ${{ env.RELEASE_DIR }}/BorderlessGaming.log
